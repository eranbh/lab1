# our prompt is sensitive to the pwd.
# this is to make the prompt as useful as possible
function cd()
{

    
    command cd $1;

    PADDITIONAL_INFO="git: "
    BRANCH_NAME=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'`

    if [[ -z $BRANCH_NAME ]]
     then
        PADDITIONAL_INFO+="no branch"
     else
        PADDITIONAL_INFO+=$BRANCH_NAME
    fi

    PADDITIONAL_AOSP_ENV=""
    # now if the path contains the name of a google repo
    # we add the current environment variables to help
    # prevent build confusion and general sadness

    if [[ $PWD == *marshmallow* ]] ; then
       PADDITIONAL_AOSP_ENV="aosp env: "
       if [ -z $TARGET_PRODUCT ] ;  then
             PADDITIONAL_AOSP_ENV+="invalid. choose a combo"
         else 
             PADDITIONAL_AOSP_ENV+="$TARGET_PRODUCT ; $TARGET_BUILD_TYPE ; $TARGET_BUILD_VARIANT"
       fi
    fi
}


# logcat into file
function all
{
     DATE=`date +%F__%T`
     adb logcat >> "${LOG_AREA}/logcat.$DATE" 
}

# smart grep functions [google has some, but
# only as targets for make. i need to have
# some handy when im working]

# find by name exact
function fn_ext
{
    find . -type f -name $1;
}

# find by name wildcard pattern
function fn_wc
{
    find . -type f -name "*$1*";
}

# find by content exact
function fn_cnt_ext
{
    fn_ext $1 |xargs grep $2
}

# view images
function oimg
{
    nohup eog "$1" 2>/dev/null & 
}


# view images
function opdf
{
    nohup evince "$1" 2>/dev/null & 
}

# open gantt tool
function ogantt
{
    nohup ganttproject "$1"  2>/dev/null & 
}


# manually install deb
function install-deb
{
    sudo dpkg -i $1;
    sudo apt-get install -f;
}
# opens a word document
function owd
{
    nohup /usr/lib/libreoffice/program/soffice.bin --writer  "$1" > /dev/null 2>&1 &
}

# android: set env
function sae
{
    cd "$REPOS/$CURR_ANDROID";
    . build/envsetup.sh;
    lunch;
}

