# our prompt is sensitive to the pwd.
# this is to make the prompt as useful as possible
function cd()
{

    
    command cd $1;

    #PADDITIONAL_INFO="git: "
    BRANCH_NAME=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'`

    if [[ -z $BRANCH_NAME ]]
     then
        PADDITIONAL_INFO="no branch"
     else
        PADDITIONAL_INFO=$BRANCH_NAME
    fi
}

# a set of aliases to avoid repetition
function no-cerr
{

   eval  "$1" 2>/dev/null
}

function daemonize
{
    eval "nohup $1 &" 
}


function usage
{
    echo "$1"
}

# find by name exact
function fn_fl_nm
{
    # defaults
    FIND_PATH="."
    TYPE="f"
    if [ $# -eq 1 ]; then
        NAME=$1  
    elif [ $# -eq 3 ]; then
        FIND_PATH=$1
        TYPE=$2
        NAME=$3
    elif [ $# -le 2 ] || [ $# -ge 3 ]; then
        usage "BAD ARGS: [name] || [path, type, name]"
        return
    fi 
    no-cerr "find $FIND_PATH  -type $TYPE -name \"$NAME\""
}

function check_valid_values
{
    if [ "$1" -lt "$2" ] || [ "$1" -gt "$3" ]; then
        usage "$4"
        return "1"
    fi
    return "0"
}


function fn_fl_ct
{
    check_valid_values $# "2" "4" "BAD ARGS: [name, pattern] || [path, type, name, pattern]"
    
    if [ $? == 1 ]; then
        return 1
    fi

    if [ $# -lt 4 ]; then
        FILES=`fn_fl_nm "$1"`
        PATTERN=$2
    else
        FILES=`fn_fl_nm "$1 $2 $3"`
        PATTERN=$4
    fi
    
    for file in ${FILES[*]}
    do
        grep -Hn "${PATTERN}" ${file}
    done
}

function find_in_all_asterix
{
    check_valid_values $1 "1" "2" "BAD ARGS: [ pattern] || [path, pattern]"
    if [ $? == 1 ]; then
        return 1
    fi
    if [ $# -eq 4 ]; then 
        fn_fl_ct "$2" "-f" "$4" "$3"
    else
        fn_fl_ct "$3" "$2"
    fi
    return 0
}

function fn_in_all_h
{
    find_in_all_asterix $# $@ "*.h" 
    find_in_all_asterix $# $@ "*.hpp" 
    find_in_all_asterix $# $@ "*.inl" 
    if [ $? == 1 ]; then
        return 1
    fi
}

function fn_in_all_cpp
{
    find_in_all_asterix $# $@ "*.cpp" 
    find_in_all_asterix $# $@ "*.cc" 
    if [ $? == 1 ]; then
        return 1
    fi
}

function fn_in_all_py
{
    find_in_all_asterix $# $@ "*.py" 
    if [ $? == 1 ]; then
        return 1
    fi
}



# view pdfs
function opdf
{
     daemonize "${PDF_READ_NM} \"$1\"" 
}

#TODO view images
#function ochm
#{
#    nohup kchmviewer "$1" 2>/dev/null & 
#}



# opens a word document
function owd
{
    daemonize "${OFFICE_PACKAGE} --writer"
}

# opens a slid deck powerpoint like thing
function opp
{
    daemonize "${OFFICE_PACKAGE} --impress"
}


###### SENTINEL RELATED #####
function oecl
{
    export PATH=/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Commands/java:${PATH}
    daemonize  "${ECLIPSE}/eclipse"
}

# opening vim needs some loving
function vim
{
    local STTYOPTS="$(stty --save)"
    stty stop '' -ixoff
    command vim "$@"
    stty "$STTYOPTS"
} 
